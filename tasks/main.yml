---
- name: Set BPM Suite Artifact Facts
  set_fact:
    jboss_bxms_artifact_tmp_dest: "{{ '/tmp/' + jboss_bxms_artifact_name }}"
    jboss_bxms_business_central_location: "{{ jboss_bxms_deployment_directory + '/business-central.war' }}"
    jboss_bxms_dashbuilder_location: "{{ jboss_bxms_deployment_directory + '/dashbuilder.war' }}"
    jboss_bxms_kie_server_location: "{{ jboss_bxms_deployment_directory + '/kie-server.war' }}"
  tags:
    - jboss_bxms

- include: check_for_bxms_install.yml

- name: Copy JBoss BxMS
  copy:
    src: "{{ jboss_bxms_artifact_name }}"
    dest: "{{ jboss_bxms_artifact_tmp_dest }}"
  tags:
    - jboss_bxms
  when: transfer_method == 'copy-from-controller' and jboss_bxms_exists == false


- name: Async Download JBoss BxMS from Red Hat Customer Portal
  redhat_csp_download:
    url: "{{ jboss_bxms_artifact_source }}"
    dest: "{{ jboss_bxms_artifact_tmp_dest }}"
    username: "{{ rhn_username }}"
    password: "{{ rhn_password }}"
  async: 7200
  poll: 0
  register: jboss_bxms_download
  tags:
    - jboss_bxms
  when: transfer_method == 'csp-to-host' and jboss_bxms_exists == false


- name: 'Check On JBoss BxMS Download Completion'
  async_status: jid={{ jboss_bxms_download.ansible_job_id }}
  register: job_result3
  until: job_result3.finished
  retries: 600
  delay: 10
  tags:
    - jboss_bxms
  when: transfer_method == 'csp-to-host' and jboss_bxms_exists == false


## We need to abstract this out somehow, as it will be different per container. Handlers don't seem to be the right way
- name: Stop jboss-as Service
  service:
    name: jboss-as-standalone.service
    state: stopped
  tags:
    - jboss_bxms
  when: jboss_bxms_exists == false


# For EAP, this should overlay the BPM download over EAP, intentionally overwriting some files in the process
- name: Extract BPM Suite
  sudo: true
  unarchive:
    src: "{{ jboss_bxms_artifact_tmp_dest }}"
    dest: "{{ jboss_bxms_artifact_dest }}"
    copy: no
    owner: "{{ jboss_bxms_service_user }}"
    group: "{{ jboss_bxms_service_group }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_exists == false

- name: Remove Business Central WAR
  file:
    state: absent
    path: "{{ jboss_bxms_business_central_location }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_business_central == false

- name: Remove Business Central Deployment Marker
  file:
    state: absent
    path: "{{ jboss_bxms_business_central_location + '.dodeploy' }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_business_central == false

- name: Remove Dashbuilder WAR
  file:
    state: absent
    path: "{{ jboss_bxms_dashbuilder_location }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_dashbuilder == false

- name: Remove Dashbuilder Deployment Marker
  file:
    state: absent
    path: "{{ jboss_bxms_dashbuilder_location + '.dodeploy' }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_dashbuilder == false

- name: Remove KIE Server WAR
  file:
    state: absent
    path: "{{ jboss_bxms_kie_server_location }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_kie_server == false

- name: Remove KIE Server Deployment Marker
  file:
    state: absent
    path: "{{ jboss_bxms_kie_server_location + '.dodeploy' }}"
  tags:
    - jboss_bxms
  when: jboss_bxms_deploy_kie_server == false

- include: configuration_files.yml

- include: java_opts.yml

## We need to abstract this out somehow, as it will be different per container. Handlers don't seem to be the right way
- name: Start and Enable jboss-as Service
  service:
    name: jboss-as-standalone.service
    state: started
    enabled: yes
  tags:
    - jboss_bxms
  when: jboss_bxms_exists == false
